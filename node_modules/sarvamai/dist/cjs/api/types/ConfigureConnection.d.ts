/**
 * This file was auto-generated by Fern from our API Definition.
 */
/**
 * Configuration message required as the first message after establishing the WebSocket connection.
 * This initializes TTS parameters and can be updated at any time during the WebSocket lifecycle
 * by sending a new config message. When a config update is sent, any text currently in the buffer
 * will be automatically flushed and processed before applying the new configuration.
 */
export interface ConfigureConnection {
    type: "config";
    data: ConfigureConnection.Data;
}
export declare namespace ConfigureConnection {
    interface Data {
        /** The language of the text is BCP-47 format */
        target_language_code: Data.TargetLanguageCode;
        /**
         * The speaker voice to be used for the output audio.
         *
         * **Default:** Anushka
         *
         * **Model Compatibility (Speakers compatible with respective model):**
         * - **bulbul:v2:**
         *   - Female: Anushka, Manisha, Vidya, Arya
         *   - Male: Abhilash, Karun, Hitesh
         *
         * **Note:** Speaker selection must match the chosen model version.
         */
        speaker: Data.Speaker;
        /**
         * Controls the pitch of the audio. Lower values result in a deeper voice,
         * while higher values make it sharper. The suitable range is between -0.75
         * and 0.75. Default is 0.0.
         */
        pitch?: number;
        /**
         * Controls the speed of the audio. Lower values result in slower speech,
         * while higher values make it faster. The suitable range is between 0.5
         * and 2.0. Default is 1.0.
         */
        pace?: number;
        /**
         * Controls the loudness of the audio. Lower values result in quieter audio,
         * while higher values make it louder. The suitable range is between 0.3
         * and 3.0. Default is 1.0.
         */
        loudness?: number;
        /**
         * Specifies the sample rate of the output audio. Supported values are
         * 8000, 16000, 22050, 24000 Hz. If not provided, the default is 22050 Hz.
         */
        speech_sample_rate?: number;
        /**
         * Controls whether normalization of English words and numeric entities
         * (e.g., numbers, dates) is performed. Set to true for better handling
         * of mixed-language text. Default is false.
         */
        enable_preprocessing?: boolean;
        /** Audio codec (currently supports MP3 only, optimized for real-time playback) */
        output_audio_codec?: Data.OutputAudioCodec;
        /** Audio bitrate (choose from 5 supported bitrate options) */
        output_audio_bitrate?: Data.OutputAudioBitrate;
        /** Minimum character length that triggers buffer flushing for TTS model processing */
        min_buffer_size?: number;
        /** Maximum length for sentence splitting (adjust based on content length) */
        max_chunk_length?: number;
    }
    namespace Data {
        /**
         * The language of the text is BCP-47 format
         */
        type TargetLanguageCode = "bn-IN" | "en-IN" | "gu-IN" | "hi-IN" | "kn-IN" | "ml-IN" | "mr-IN" | "od-IN" | "pa-IN" | "ta-IN" | "te-IN";
        const TargetLanguageCode: {
            readonly BnIn: "bn-IN";
            readonly EnIn: "en-IN";
            readonly GuIn: "gu-IN";
            readonly HiIn: "hi-IN";
            readonly KnIn: "kn-IN";
            readonly MlIn: "ml-IN";
            readonly MrIn: "mr-IN";
            readonly OdIn: "od-IN";
            readonly PaIn: "pa-IN";
            readonly TaIn: "ta-IN";
            readonly TeIn: "te-IN";
        };
        /**
         * The speaker voice to be used for the output audio.
         *
         * **Default:** Anushka
         *
         * **Model Compatibility (Speakers compatible with respective model):**
         * - **bulbul:v2:**
         *   - Female: Anushka, Manisha, Vidya, Arya
         *   - Male: Abhilash, Karun, Hitesh
         *
         * **Note:** Speaker selection must match the chosen model version.
         */
        type Speaker = "anushka" | "abhilash" | "manisha" | "vidya" | "arya" | "karun" | "hitesh";
        const Speaker: {
            readonly Anushka: "anushka";
            readonly Abhilash: "abhilash";
            readonly Manisha: "manisha";
            readonly Vidya: "vidya";
            readonly Arya: "arya";
            readonly Karun: "karun";
            readonly Hitesh: "hitesh";
        };
        /**
         * Audio codec (currently supports MP3 only, optimized for real-time playback)
         */
        type OutputAudioCodec = "mp3" | "linear16" | "mulaw" | "alaw" | "opus" | "flac" | "aac" | "wav";
        const OutputAudioCodec: {
            readonly Mp3: "mp3";
            readonly Linear16: "linear16";
            readonly Mulaw: "mulaw";
            readonly Alaw: "alaw";
            readonly Opus: "opus";
            readonly Flac: "flac";
            readonly Aac: "aac";
            readonly Wav: "wav";
        };
        /**
         * Audio bitrate (choose from 5 supported bitrate options)
         */
        type OutputAudioBitrate = "32k" | "64k" | "96k" | "128k" | "192k";
        const OutputAudioBitrate: {
            readonly ThirtyTwoK: "32k";
            readonly SixtyFourK: "64k";
            readonly NinetySixK: "96k";
            readonly OneHundredTwentyEightK: "128k";
            readonly OneHundredNinetyTwoK: "192k";
        };
    }
}
